format short
clc
clear all

C = [-2 0 -1 0 0 0];
A = [-1 -1 1 1 0 -5;
     -1  2 -4 0 1 -8];
ib = [4 5]; % Initial basic variable indices (s1 and s2)

zjcj = C(ib) * A - C;
disp('Initial Basic Variables:');
disp(["x" num2str(ib(1)) ; "x" num2str(ib(2))]);

disp('Initial Zj - Cj row:');
disp(zjcj);

disp('Initial Table:');
disp(A);

RUN = true;
while RUN
    if any(A(:, end) < 0)
        fprintf('\n The current BFS is **not feasible**.\n');
        [lvg_val, pvt_row] = min(A(:, end));
        fprintf('Leaving Variable Row: %d\n', pvt_row);

        m = -inf(1, size(A, 2)-1);
        for i = 1:size(A,2)-1
            if A(pvt_row, i) < 0
                m(i) = zjcj(i) / A(pvt_row, i);
            end
        end

        [ent_val, pvt_col] = max(m);
        fprintf('Entering Variable: x%d\n', pvt_col);

        A(pvt_row, :) = A(pvt_row, :) / A(pvt_row, pvt_col);
        for i = 1:size(A, 1)
            if i ~= pvt_row
                A(i, :) = A(i, :) - A(i, pvt_col) * A(pvt_row, :);
            end
        end

        ib(pvt_row) = pvt_col;
        zjcj = C(ib) * A - C;

        fprintf('\n  Updated Basic Variables:\n');
        disp(["x" num2str(ib(1)) ; "x" num2str(ib(2))]);

        fprintf('\n Updated Zj - Cj row:\n');
        disp(zjcj);

        disp(' Updated Table:');
        disp(A);
    else
        RUN = false;
        fprintf('\n The current BFS is **Feasible and Optimal**.\n');
    end
end

% Final solution
final_sol = zeros(1, length(C));
final_sol(ib) = A(:, end);
Z = final_sol * C';

fprintf('\n Final Optimal Solution:\n');
for i = 1:length(final_sol)
    fprintf('x%d = %.2f\n', i, final_sol(i));
end
fprintf('Maximized Z = %.2f\n', Z);
